argument_list:	12.93%
call_expression:	12.57%
type_identifier:	10.34%
expression_statement:	7.80%
binary_expression:	5.72%
assignment_expression:	4.48%
parameter_declaration:	4.43%
condition_clause:	3.75%
if_statement:	2.89%
init_declarator:	2.67%
parameter_list:	2.63%
field_identifier:	2.47%
field_expression:	2.43%
function_declarator:	2.37%
return_statement:	1.97%
primitive_type:	1.95%
compound_statement:	1.95%
pointer_expression:	1.85%
number_literal:	1.66%
unary_expression:	1.59%
storage_class_specifier:	1.35%
pointer_declarator:	0.74%
type_descriptor:	0.61%
string_content:	0.60%
string_literal:	0.58%
case_statement:	0.53%
reference_declarator:	0.50%
parenthesized_expression:	0.49%
update_expression:	0.43%
function_definition:	0.37%
template_argument_list:	0.36%
template_type:	0.32%
break_statement:	0.29%
abstract_pointer_declarator:	0.26%
abstract_function_declarator:	0.25%
qualified_identifier:	0.25%
for_statement:	0.20%
namespace_identifier:	0.19%
sized_type_specifier:	0.16%
type_qualifier:	0.14%
subscript_expression:	0.13%
subscript_argument_list:	0.13%
preproc_arg:	0.13%
parenthesized_declarator:	0.11%
preproc_function_def:	0.11%
preproc_params:	0.11%
statement_identifier:	0.10%
concatenated_string:	0.10%
conditional_expression:	0.10%
ref_qualifier:	0.10%
alias_declaration:	0.10%
initializer_list:	0.09%
char_literal:	0.09%
goto_statement:	0.07%
user_defined_literal:	0.07%
literal_suffix:	0.07%
continue_statement:	0.07%
type_parameter_declaration:	0.07%
optional_parameter_declaration:	0.06%
else_clause:	0.06%
template_parameter_list:	0.06%
struct_specifier:	0.06%
comma_expression:	0.05%
enum_specifier:	0.05%
compound_literal_expression:	0.05%
parameter_pack_expansion:	0.04%
class_specifier:	0.04%
dependent_type:	0.04%
array_declarator:	0.04%
placeholder_type_specifier:	0.03%
switch_statement:	0.03%
while_statement:	0.03%
template_declaration:	0.03%
template_function:	0.03%
labeled_statement:	0.03%
structured_binding_declarator:	0.02%
field_initializer:	0.02%
new_expression:	0.02%
cast_expression:	0.02%
operator_name:	0.02%
pure_virtual_clause:	0.02%
field_initializer_list:	0.02%
initializer_pair:	0.02%
field_designator:	0.02%
field_declaration_list:	0.01%
preproc_include:	0.01%
preproc_def:	0.01%
preproc_directive:	0.01%
requires_clause:	0.01%
lambda_capture_specifier:	0.01%
abstract_reference_declarator:	0.01%
abstract_parenthesized_declarator:	0.01%
optional_type_parameter_declaration:	0.01%
using_declaration:	0.01%
delete_expression:	0.01%
template_instantiation:	0.01%
preproc_call:	0.01%
abstract_array_declarator:	0.01%
trailing_return_type:	0.01%
escape_sequence:	0.01%
init_statement:	0.01%
concept_definition:	0.01%
constraint_conjunction:	0.01%
destructor_name:	0.00%
lambda_declarator:	0.00%
access_specifier:	0.00%
field_declaration:	0.00%
dependent_name:	0.00%
pointer_type_declarator:	0.00%
explicit_function_specifier:	0.00%
operator_cast:	0.00%
for_range_loop:	0.00%
base_class_clause:	0.00%
