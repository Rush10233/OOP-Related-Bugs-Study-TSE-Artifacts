/* True if EXPR is an expression whose type can be used directly in lambda
       capture.  Not to be used for 'auto'.  */
    
    static bool
    type_deducible_expression_p (tree expr)
    {
      if (!type_dependent_expression_p (expr))
        return true;
      if (BRACE_ENCLOSED_INITIALIZER_P (expr)
          || TREE_CODE (expr) == EXPR_PACK_EXPANSION)
        return false;
      tree t = non_reference (TREE_TYPE (expr));
      if (!t) return false;
      while (TREE_CODE (t) == POINTER_TYPE)
        t = TREE_TYPE (t);
      return currently_open_class (t);
    }
    

      else if (!is_this && !type_deducible_expression_p (expr))

/* True if EXPR is an expression whose type can be used directly in lambda
       capture.  Not to be used for 'auto'.  */
    
    static bool
    type_deducible_expression_p (tree expr)
    {
      if (!type_dependent_expression_p (expr))
        return true;
      if (BRACE_ENCLOSED_INITIALIZER_P (expr)
          || TREE_CODE (expr) == EXPR_PACK_EXPANSION)
        return false;
      tree t = non_reference (TREE_TYPE (expr));
      if (!t) return false;
      while (TREE_CODE (t) == POINTER_TYPE)
        t = TREE_TYPE (t);
      return currently_open_class (t);
    }
    

      else if (!is_this && !type_deducible_expression_p (expr))

/* True if EXPR is an expression whose type can be used directly in lambda
       capture.  Not to be used for 'auto'.  */
    
    static bool
    type_deducible_expression_p (tree expr)
    {
      if (!type_dependent_expression_p (expr))
        return true;
      if (BRACE_ENCLOSED_INITIALIZER_P (expr)
          || TREE_CODE (expr) == EXPR_PACK_EXPANSION)
        return false;
      tree t = non_reference (TREE_TYPE (expr));
      if (!t) return false;
      while (TREE_CODE (t) == POINTER_TYPE)
        t = TREE_TYPE (t);
      return currently_open_class (t);
    }
    

      else if (!type_deducible_expression_p (expr))

return (t && TREE_CODE (t) != TYPE_PACK_EXPANSION
    	  && !WILDCARD_TYPE_P (t) && !LAMBDA_TYPE_P (t)
    	  && !type_uses_auto (t));

