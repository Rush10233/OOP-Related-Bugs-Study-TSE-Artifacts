DECL_SIZE (field)))
    	  return false;
          }

          {
    	tree btype = DECL_BIT_FIELD_TYPE (field);
    	if (!type_has_unique_obj_representations (btype))

    
      offset_int cur = 0;
      for (tree field = TYPE_FIELDS (t); field; field = DECL_CHAIN (field))

          {
    	offset_int fld = wi::to_offset (DECL_FIELD_OFFSET (field));
    	offset_int bitpos = wi::to_offset (DECL_FIELD_BIT_OFFSET (field));

DECL_SIZE (field)))
    	  return false;
          }

          {
    	tree btype = DECL_BIT_FIELD_TYPE (field);
    	if (!type_has_unique_obj_representations (btype))

    
      offset_int cur = 0;
      for (tree field = TYPE_FIELDS (t); field; field = DECL_CHAIN (field))

          {
    	offset_int fld = wi::to_offset (DECL_FIELD_OFFSET (field));
    	offset_int bitpos = wi::to_offset (DECL_FIELD_BIT_OFFSET (field));

DECL_SIZE (field)))
    	  return false;
          }

          {
    	tree btype = DECL_BIT_FIELD_TYPE (field);
    	if (!type_has_unique_obj_representations (btype))

    
      offset_int cur = 0;
      for (tree field = TYPE_FIELDS (t); field; field = DECL_CHAIN (field))

          {
    	offset_int fld = wi::to_offset (DECL_FIELD_OFFSET (field));
    	offset_int bitpos = wi::to_offset (DECL_FIELD_BIT_OFFSET (field));

DECL_SIZE (field)))
    	  return false;
          }

          {
    	tree btype = DECL_BIT_FIELD_TYPE (field);
    	if (!type_has_unique_obj_representations (btype))

    
      offset_int cur = 0;
      for (tree field = TYPE_FIELDS (t); field; field = DECL_CHAIN (field))

          {
    	offset_int fld = wi::to_offset (DECL_FIELD_OFFSET (field));
    	offset_int bitpos = wi::to_offset (DECL_FIELD_BIT_OFFSET (field));

