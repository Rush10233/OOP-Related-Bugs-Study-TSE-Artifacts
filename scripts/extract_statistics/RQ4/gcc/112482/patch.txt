bool err_p = true;

    	      else if (decl_context == CATCHPARM || template_parm_flag)

    	      else
    		/* Do not issue an error while tentatively parsing a function
    		   parameter: for T t(auto(a), 42);, when we just saw the 1st
    		   parameter, we don't know yet that this construct won't be
    		   a function declaration.  Defer the checking to
    		   cp_parser_parameter_declaration_clause.  */
    		err_p = false;

    	  if (err_p)
    	    type = error_mark_node;

        {
          for (tree p : pending_decls)
    	pushdecl (p);
    
          /* Delayed checking of auto parameters.  */
          if (!parser->auto_is_implicit_function_template_parm_p
    	  && cxx_dialect >= cxx14)
    	for (tree p = parameters; p; p = TREE_CHAIN (p))
    	  if (type_uses_auto (TREE_TYPE (TREE_VALUE (p))))
    	    {
    	      error_at (location_of (TREE_VALUE (p)),
    			"%<auto%> parameter not permitted in this context");
    	      TREE_TYPE (TREE_VALUE (p)) = error_mark_node;
    	    }
        }

