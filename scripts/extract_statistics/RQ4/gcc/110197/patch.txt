if (is_really_empty_class (elem_type, /*ignore_vptr*/false))
        return build_constructor (elem_type, NULL);
    

      if (CP_AGGREGATE_TYPE_P (elem_type))

          /* Like in cxx_eval_store_expression, omit entries for empty fields.  */
          bool no_slot = new_ctx.ctor == NULL_TREE;

          bool no_slot = new_ctx.ctor == NULL_TREE;
          if (new_ctx.ctor != ctx->ctor && !no_slot)

          if (no_slot)
    	{
    	  /* This is an initializer for an empty subobject; now that we've
    	     checked that it's constant, we can ignore it.  */
    	  gcc_checking_assert (i == 0);
    	  break;
    	}
          else if (new_ctx.ctor != ctx->ctor)

if (is_really_empty_class (elem_type, /*ignore_vptr*/false))
        return build_constructor (elem_type, NULL);
    

      if (CP_AGGREGATE_TYPE_P (elem_type))

          /* Like in cxx_eval_store_expression, omit entries for empty fields.  */
          bool no_slot = new_ctx.ctor == NULL_TREE;

          bool no_slot = new_ctx.ctor == NULL_TREE;
          if (new_ctx.ctor != ctx->ctor && !no_slot)

          if (no_slot)
    	{
    	  /* This is an initializer for an empty subobject; now that we've
    	     checked that it's constant, we can ignore it.  */
    	  gcc_checking_assert (i == 0);
    	  break;
    	}
          else if (new_ctx.ctor != ctx->ctor)

