tsubst_flags_t complain)
    {
      conversion *conv = NULL;

      tree to = TREE_TYPE (rto);
      tree from = rfrom;
      tree tfrom;

          z_candidate *cand = build_user_type_conversion_1 (rto, expr, flags,
    							complain);
          if (cand)

        }
    
      /* From this point on, we conceptually need temporaries, even if we
         elide them.  Only the cases above are "direct bindings".  */
      if (flags & LOOKUP_NO_TEMP_BIND)

    
      /* [over.ics.rank]
    

         there's no strictly viable candidate.  */
      if (!maybe_valid_p && (flags & LOOKUP_SHORTCUT_BAD_CONVS))
        {

          conv = alloc_conversion (ck_deferred_bad);
          conv->bad_p = true;
          return conv;

        conv = implicit_conversion (to, from, expr, c_cast_p,
    				flags, complain);
      if (!conv)

    
      if (conv->user_conv_p)
        {

    	      = reference_binding (rto, ftype, NULL_TREE, c_cast_p,
    				   sflags, complain);
    	    if (!new_second)

    	    conv = merge_conversion_sequences (t, new_second);
    	    gcc_assert (maybe_valid_p || conv->bad_p);
    	    return conv;

