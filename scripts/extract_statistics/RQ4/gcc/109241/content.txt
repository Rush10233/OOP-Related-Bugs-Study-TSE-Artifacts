return error_mark_node;
    
      if (COMPLETE_OR_OPEN_TYPE_P (type)

        return type;
    
      /* Figure out which template is being instantiated.  */

    
        case TAG_DEFN:
          tmp = tsubst (TREE_TYPE (t), args, complain, NULL_TREE);

    	{
    	  /* Local classes are not independent templates; they are
    	     instantiated along with their containing function.  And this

    	  /* Closures are handled by the LAMBDA_EXPR.  */
    	  gcc_assert (!LAMBDA_TYPE_P (TREE_TYPE (t)));
    	  complete_type (tmp);

    	  tree save_ccp = current_class_ptr;
    	  tree save_ccr = current_class_ref;
    	  for (tree fld = TYPE_FIELDS (tmp); fld; fld = DECL_CHAIN (fld))

case TAG_DEFN:
          t = TREE_TYPE (t);
          if (CLASS_TYPE_P (t))

          else
    	/* Enum, look at the values.  */
    	for (tree l = TYPE_VALUES (t); l; l = TREE_CHAIN (l))

case TAG_DEFN:
          t = TREE_TYPE (t);
          if (CLASS_TYPE_P (t))

          else
    	/* Enum, look at the values.  */
    	for (tree l = TYPE_VALUES (t); l; l = TREE_CHAIN (l))

