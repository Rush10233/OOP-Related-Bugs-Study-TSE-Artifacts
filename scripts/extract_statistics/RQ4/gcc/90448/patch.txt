const bool callee_copies
    	    = reference_callee_copied (args_so_far_pnt, arg);
    	  tree base;
    
    	  /* If we're compiling a thunk, pass directly the address of an object
    	     already in memory, instead of making a copy.  Likewise if we want
    	     to make the copy in the callee instead of the caller.  */
    	  if ((call_from_thunk_p || callee_copies)
    	      && (base = get_base_address (args[i].tree_value))
    	      && TREE_CODE (base) != SSA_NAME
    	      && (!DECL_P (base) || MEM_P (DECL_RTL (base))))

const bool callee_copies
    	    = reference_callee_copied (args_so_far_pnt, arg);
    	  tree base;
    
    	  /* If we're compiling a thunk, pass directly the address of an object
    	     already in memory, instead of making a copy.  Likewise if we want
    	     to make the copy in the callee instead of the caller.  */
    	  if ((call_from_thunk_p || callee_copies)
    	      && (base = get_base_address (args[i].tree_value))
    	      && TREE_CODE (base) != SSA_NAME
    	      && (!DECL_P (base) || MEM_P (DECL_RTL (base))))

