int len = 1;

    	len = TREE_VEC_LENGTH (expanded_args);

      else
        type = tsubst (TREE_VALUE (arg_types), args, complain, in_decl);

    
         the rest of the chain.  */
      for (int i = 0; i < len; i++)
        {
          if (expanded_args)
    	type = TREE_VEC_ELT (expanded_args, i);

          if (type == error_mark_node)
    	return error_mark_node;
          if (VOID_TYPE_P (type))
    	{
    	  if (complain & tf_error)
    	    {
    	      error ("invalid parameter type %qT", type);
    	      if (in_decl)
    		error ("in declaration %q+D", in_decl);
    	    }
    	  return error_mark_node;
    	}

      /* We do not substitute into default arguments here.  The standard
         mandates that they be instantiated only when needed, which is
         done in build_over_call.  */
      tree default_arg = TREE_PURPOSE (arg_types);

      /* Except that we do substitute default arguments under tsubst_lambda_expr,
         since the new op() won't have any associated template arguments for us
         to refer to later.  */
      if (lambda_fn_in_template_p (in_decl))
        default_arg = tsubst_copy_and_build (default_arg, args, complain, in_decl,
    					 false/*fn*/, false/*constexpr*/);

      tree remaining_arg_types = tsubst_arg_types (TREE_CHAIN (arg_types),
    					       args, end, complain, in_decl);
      if (remaining_arg_types == error_mark_node)
        return error_mark_node;

      for (int i = len-1; i >= 0; i--)
        {
          if (expanded_args)
    	type = TREE_VEC_ELT (expanded_args, i);
    
          /* Do array-to-pointer, function-to-pointer conversion, and ignore
    	 top-level qualifiers as required.  */
          type = cv_unqualified (type_decays_to (type));
    
          if (default_arg && TREE_CODE (default_arg) == DEFERRED_PARSE)
    	{
    
    	     have been parsed.  This can happen for a nested template
    	     class, and is not an error unless we require the default
    	     argument in a call of this function.  */
    	  remaining_arg_types
    	    = tree_cons (default_arg, type, remaining_arg_types);
    	  vec_safe_push (DEFPARSE_INSTANTIATIONS (default_arg),
    			 remaining_arg_types);
    	}
          else
    	remaining_arg_types
    	  = hash_tree_cons (default_arg, type, remaining_arg_types);
        }

