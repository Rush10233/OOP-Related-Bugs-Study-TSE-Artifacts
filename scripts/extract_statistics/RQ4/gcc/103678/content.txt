}
      else if (nested_name_specifier)
        {

    
          /* Given:
    

    	 we will get a TYPENAME_TYPE when processing the definition of
    
    	 try to define it.  */

    	{

    	    {
    	      cp_parser_error (parser, "could not resolve typename type");
    	      type = error_mark_node;
    	    }
    	}
    

    	{
    	  type = NULL_TREE;
    	  goto done;
    	}
    
          /* Enter the scope indicated by the nested-name-specifier.  */
          pushed_scope = push_scope (nested_name_specifier);
          /* Get the canonical version of this type.  */

          /* Call push_template_decl if it seems like we should be defining a
    	 template either from the template headers or the type we're
    	 defining, so that we diagnose both extra and missing headers.  */

