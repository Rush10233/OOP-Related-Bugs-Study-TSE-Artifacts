if (TYPE_ALIGN (cand) == TYPE_ALIGN (base)
          && TYPE_USER_ALIGN (cand) == TYPE_USER_ALIGN (base))

    	  && TYPE_USER_ALIGN (cand) == TYPE_USER_ALIGN (base)

if (TYPE_ALIGN (cand) == TYPE_ALIGN (base))


      if (COMPLETE_TYPE_P (result) && !COMPLETE_TYPE_P (t))
      /* If RESULT is complete and T isn't, it's likely the case that T
         is a variant of RESULT which hasn't been updated yet.  Skip the
         attribute handling.  */;
      else

          if (TYPE_USER_ALIGN (t) != TYPE_USER_ALIGN (result)
    	  || TYPE_ALIGN (t) != TYPE_ALIGN (result))

    	  gcc_assert (TYPE_USER_ALIGN (t));
    	  if (remove_attributes)
    	    *remove_attributes = true;

    	    {
    	      if (TYPE_ALIGN (t) == TYPE_ALIGN (result))
    		result = build_variant_type_copy (result);
    	      else
    		result = build_aligned_type (result, TYPE_ALIGN (t));
    	      TYPE_USER_ALIGN (result) = true;
    	    }
    	}
    
          if (TYPE_ATTRIBUTES (t))
    	{
    	  if (remove_attributes)
    	    result = apply_identity_attributes (result, TYPE_ATTRIBUTES (t),
    						remove_attributes);
    	  else
    	    result = cp_build_type_attribute_variant (result,
    						      TYPE_ATTRIBUTES (t));

    

if (TYPE_ALIGN (cand) == TYPE_ALIGN (base))

bool tua_cleared_p = false;

    	  /* Remember that we're about to reset this flag.  */
    	  tua_cleared_p = TYPE_USER_ALIGN (type);
    	  TYPE_USER_ALIGN (type) = false;

    	   variant != NULL_TREE;

    	    {
    	      valign = MAX (valign, TYPE_ALIGN (variant));
    	      /* If we reset TYPE_USER_ALIGN on the main variant, we might
    		 need to reset it on the variants too.  TYPE_MODE will be set
    		 to MODE in this variant, so we can use that.  */
    	      if (tua_cleared_p && GET_MODE_ALIGNMENT (mode) >= valign)
    		TYPE_USER_ALIGN (variant) = false;
    	    }

      if (TYPE_ALIGN (cand) == TYPE_ALIGN (base)
          && TYPE_USER_ALIGN (cand) == TYPE_USER_ALIGN (base))

    	  && TYPE_USER_ALIGN (cand) == TYPE_USER_ALIGN (base)

