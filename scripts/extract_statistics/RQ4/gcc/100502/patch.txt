if (processing_template_decl)
    	    /* Even though this class member access expression is at this
    	       point not dependent, the member itself may be dependent, and
    	       we must not potentially push a access check for a dependent
    	       member onto TI_DEFERRED_ACCESS_CHECKS.  So don't check access
    	       ahead of time here; we're going to redo this member lookup at
    	       instantiation time anyway.  */
    	    push_deferring_access_checks (dk_no_check);

    	  if (processing_template_decl)
    	    pop_deferring_access_checks ();

else if (tree fc = DECL_FRIEND_CONTEXT (supplicant))
    	context = fc;

    	 DECL is accessible.  */

    	if (friend_accessible_p (fctx, decl, type, otype))

if (processing_template_decl)
    	    /* Even though this class member access expression is at this
    	       point not dependent, the member itself may be dependent, and
    	       we must not potentially push a access check for a dependent
    	       member onto TI_DEFERRED_ACCESS_CHECKS.  So don't check access
    	       ahead of time here; we're going to redo this member lookup at
    	       instantiation time anyway.  */
    	    push_deferring_access_checks (dk_no_check);

    	  if (processing_template_decl)
    	    pop_deferring_access_checks ();

