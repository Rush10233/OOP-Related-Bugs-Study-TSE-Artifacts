// C++11 [expr.prim.general]p12:
      //   An id-expression that denotes a non-static data member or non-static
      //   member function of a class can only be used:
      //   (...)
      //   - if that id-expression denotes a non-static data member and it
      //     appears in an unevaluated operand.
      //
      // If this might be the case, form a DependentScopeDeclRefExpr instead of a
      // CXXDependentScopeMemberExpr. The former can instantiate to either
      // DeclRefExpr or MemberExpr depending on lookup results, while the latter is
      // always a MemberExpr.
      bool MightBeCxx11UnevalField =
          getLangOpts().CPlusPlus11 && isUnevaluatedContext();
    
      if (!MightBeCxx11UnevalField && !isAddressOfOperand &&
          isa<CXXMethodDecl>(DC) && cast<CXXMethodDecl>(DC)->isInstance()) {

