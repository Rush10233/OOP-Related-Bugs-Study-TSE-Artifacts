bool HasExplicitTemplateArgs,
                            bool AllowNonStaticMethods = true);

      bool AllowNonStaticMethods;
      DeclContext *CurContext;

                                                 bool HasExplicitTemplateArgs,
                                                 bool AllowNonStaticMethods)
        : NumArgs(NumArgs), HasExplicitTemplateArgs(HasExplicitTemplateArgs),
          AllowNonStaticMethods(AllowNonStaticMethods),
          CurContext(SemaRef.CurContext) {

    
        // Skip the current candidate if it is not a FunctionDecl or does not accept
        // the current number of arguments.
        if (!FD || !(FD->getNumParams() >= NumArgs &&
                     FD->getMinRequiredArguments() <= NumArgs))
          continue;
    
        // If the current candidate is a non-static C++ method and non-static
        // methods are being excluded, then skip the candidate unless the current
        // DeclContext is a method in the same class or a descendent class of the
        // candidate's parent class.
        if (CXXMethodDecl *MD = dyn_cast<CXXMethodDecl>(FD)) {
          if (!AllowNonStaticMethods && !MD->isStatic()) {
            CXXMethodDecl *CurMD = dyn_cast_or_null<CXXMethodDecl>(CurContext);
            CXXRecordDecl *CurRD =
                CurMD ? CurMD->getParent()->getCanonicalDecl() : 0;
            CXXRecordDecl *RD = MD->getParent()->getCanonicalDecl();
            if (!CurRD || (CurRD != RD && !CurRD->isDerivedFrom(RD)))
              continue;
          }
        }
        return true;

                                      ExplicitTemplateArgs != 0, false);

