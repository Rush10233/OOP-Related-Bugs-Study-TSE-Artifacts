// Given the declaration context \param Ctx of a class, class template or
    // enumeration, add the associated namespaces to \param Namespaces as described
    // in [basic.lookup.argdep]p2.

      // The exact wording has been changed in C++14 as a result of
      // CWG 1691 (see also CWG 1690 and CWG 1692). We apply it unconditionally
      // to all language versions since it is possible to return a local type
      // from a lambda in C++11.
      //
      // C++14 [basic.lookup.argdep]p2:
      //   If T is a class type [...]. Its associated namespaces are the innermost
      //   enclosing namespaces of its associated classes. [...]
      //
      //   If T is an enumeration type, its associated namespace is the innermost
      //   enclosing namespace of its declaration. [...]

      // We additionally skip inline namespaces. The innermost non-inline namespace

      while (!Ctx->isFileContext() || Ctx->isInlineNamespace())

      Namespaces.insert(Ctx->getPrimaryContext());

    // lookup that involves a template argument (C++ [basic.lookup.argdep]p2).

      // C++ [basic.lookup.argdep]p2, last bullet:

    // Add the associated classes and namespaces for argument-dependent lookup
    // with an argument of class type (C++ [basic.lookup.argdep]p2).

      // C++ [basic.lookup.argdep]p2:

      //        member, if any; and its direct and indirect base classes.
      //        Its associated namespaces are the innermost enclosing
      //        namespaces of its associated classes.

    

        //        classes are: the class itself; the class of which it is
        //        a member, if any; and its direct and indirect base classes.
        //        Its associated namespaces are the innermost enclosing
        //        namespaces of its associated classes.

        //     -- If T is an enumeration type, its associated namespace
        //        is the innermost enclosing namespace of its declaration.
        //        If it is a class member, its associated class is the
        //        member¡¯s class; else it has no associated class.

          // Add the associated namespace for this enumeration.

