dwarf::Tag T = (dwarf::Tag)Ty.getTag();
        // Encode pointer constants as unsigned bytes. This is used at least for
        // null pointer constant emission. Maybe DW_TAG_reference_type should be
        // accepted here too, if there are ways to produce compile-time constant
        // references.
        if (T == dwarf::DW_TAG_pointer_type ||
            T == dwarf::DW_TAG_ptr_to_member_type)
          return true;
        assert(T == dwarf::DW_TAG_typedef || T == dwarf::DW_TAG_const_type ||
               T == dwarf::DW_TAG_volatile_type ||
               T == dwarf::DW_TAG_restrict_type);
        if (DITypeRef Deriv = DTy.getTypeDerivedFrom())
          return isUnsignedDIType(DD, DD->resolve(Deriv));

MainFileID = createFileID(Buffer, Kind);

      FileID createFileID(const llvm::MemoryBuffer *Buffer,

                          int LoadedID = 0, unsigned LoadedOffset = 0,
                          SourceLocation IncludeLoc = SourceLocation()) {

        ToID = ToSM.createFileID(ToBuf, FromSLoc.getFile().getFileCharacteristic());

      FileID FID = CSM.createFileID(CBuf);

      FileID FID = SourceMgr.createFileID(SB);

      FileID FID = SourceMgr.createFileID(Buf);

        SourceMgr.createFileID(Buffer, FileCharacter, ID, BaseOffset + Offset,
                               IncludeLoc);

