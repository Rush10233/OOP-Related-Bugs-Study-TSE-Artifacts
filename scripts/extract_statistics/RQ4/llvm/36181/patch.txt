/// Determine whether this declaration is a templated entity (whether it is
      // within the scope of a template parameter).
      bool isTemplated() const;
    

      else if (auto *AD = dyn_cast<TypeAliasDecl>(this))
        return AD->getDescribedAliasTemplate();

    bool Decl::isTemplated() const {
      // A declaration is dependent if it is a template or a template pattern, or
      // is within (lexcially for a friend, semantically otherwise) a dependent
      // context.
      // FIXME: Should local extern declarations be treated like friends?
      if (auto *AsDC = dyn_cast<DeclContext>(this))
        return AsDC->isDependentContext();
      auto *DC = getFriendObjectKind() ? getLexicalDeclContext() : getDeclContext();
      return DC->isDependentContext() || isTemplateDecl() || getDescribedTemplate();
    }
    

      if (D->isTemplated())

