"%select{| without a user-provided default constructor}1">;
    def note_add_initializer : Note<
      "add an explicit initializer to initialize %0">;

    /// Prints a fixit for adding a null initializer for |Entity|. Call this only
    /// right after emitting a diagnostic.
    static void maybeEmitZeroInitializationFixit(Sema &S,
                                                 InitializationSequence &Sequence,
                                                 const InitializedEntity &Entity) {
      if (Entity.getKind() != InitializedEntity::EK_Variable)
        return;
    
      VarDecl *VD = cast<VarDecl>(Entity.getDecl());
      if (VD->getInit() || VD->getLocEnd().isMacroID())
        return;
    
      QualType VariableTy = VD->getType().getCanonicalType();
      SourceLocation Loc = S.getLocForEndOfToken(VD->getLocEnd());
      std::string Init = S.getFixItZeroInitializerForType(VariableTy, Loc);
    
      S.Diag(Loc, diag::note_add_initializer)
          << VD << FixItHint::CreateInsertion(Loc, Init);
    }
    

              << DestType << (bool)DestType->getAs<RecordType>();
          maybeEmitZeroInitializationFixit(S, *this, Entity);

