
        // Lookup can return at most two results: the pattern for the field, or the
        // injected class name of the parent record. No other member can have the
        // same name as the field.
        assert(!Lookup.empty() && Lookup.size() <= 2 &&
               "more than two lookup results for field name");
        FieldDecl *Pattern = dyn_cast<FieldDecl>(Lookup[0]);
        if (!Pattern) {
          assert(isa<CXXRecordDecl>(Lookup[0]) &&
                 "cannot have other non-field member with same name");
          Pattern = cast<FieldDecl>(Lookup[1]);
        }
    

