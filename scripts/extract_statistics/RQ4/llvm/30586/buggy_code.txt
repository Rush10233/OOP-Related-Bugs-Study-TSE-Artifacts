"elaborated type refers to %select{a non-tag type|a typedef|a type alias|a template|a type alias template|a template template argument}0">;

      "implicit declaration introduced by elaborated type conflicts with "
      "%select{a declaration|a typedef|a type alias|a template}0 of the same name">;

        NTK_Unknown,

      NonTagKind getNonTagTypeDeclKind(const Decl *D);

    Sema::NonTagKind Sema::getNonTagTypeDeclKind(const Decl *PrevDecl) {

      return NTK_Unknown;

            NonTagKind NTK = getNonTagTypeDeclKind(PrevDecl);
            Diag(NameLoc, diag::err_tag_reference_non_tag) << NTK;

            NonTagKind NTK = getNonTagTypeDeclKind(PrevDecl);

        Diag(TemplateLoc, diag::err_tag_reference_non_tag) << NTK_TypeAliasTemplate;

        NonTagKind NTK = getNonTagTypeDeclKind(TD);
        Diag(TemplateNameLoc, diag::err_tag_reference_non_tag) << NTK;

              Sema::NonTagKind NTK = SemaRef.getNonTagTypeDeclKind(SomeDecl);
              SemaRef.Diag(IdLoc, diag::err_tag_reference_non_tag) << NTK;

                << Sema::NTK_TypeAliasTemplate;

