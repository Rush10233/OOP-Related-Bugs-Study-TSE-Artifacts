Modified Compiler Flags
    -----------------------
    

    
    Removed Compiler Flags
    -------------------------

              "static data member of %2|"
              "field of %2|"
              "typedef in %2|"

      InGroup<Shadow>, DefaultIgnore;
    def warn_decl_shadow_uncaptured_local :
      Warning<warn_decl_shadow.Text>,

      NamedDecl *getShadowedDeclaration(const TypedefNameDecl *D,
                                        const LookupResult &R);
      NamedDecl *getShadowedDeclaration(const VarDecl *D, const LookupResult &R);

      void CheckShadow(NamedDecl *D, NamedDecl *ShadowedDecl,
                       const LookupResult &R);
      void CheckShadow(Scope *S, VarDecl *D);

      SDK_StaticMember,
      SDK_Field,
      SDK_Typedef,

    };
    
    /// Determine what kind of declaration we're shadowing.

        return SDK_Using;
      else if (isa<TypedefDecl>(ShadowedDecl))
        return SDK_Typedef;

      else if (isa<RecordDecl>(OldDC))
        return isa<FieldDecl>(ShadowedDecl) ? SDK_Field : SDK_StaticMember;
    

        return nullptr;
    
      NamedDecl *ShadowedDecl = R.getFoundDecl();

    }
    
    /// Return the declaration shadowed by the given typedef \p D, or null

      return isa<TypedefNameDecl>(ShadowedDecl) ? ShadowedDecl : nullptr;
    }
    

    /// Diagnose variable or built-in function shadowing.  Implements
    /// -Wshadow.
    ///

          Previous.clear();
        }
    

        bool ConsiderLinkage = DC->isFunctionOrMethod() &&
                               DS.getStorageClassSpec() == DeclSpec::SCS_extern;
        FilterLookupForScope(Previous, DC, S, ConsiderLinkage,
                             /*AllowInlineNamespace*/false);

        if (!Previous.empty()) {
          auto *Old = Previous.getRepresentativeDecl();
          Diag(B.NameLoc, diag::err_redefinition) << B.Name;
          Diag(Old->getLocation(), diag::note_previous_definition);

        }
        PushOnScopeChains(BD, S, true);
        Bindings.push_back(BD);
        ParsingInitForAutoVars.insert(BD);

